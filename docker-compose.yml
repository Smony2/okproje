services:
  # Laravel Application
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: okproje_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - okproje_network
    depends_on:
      - db
      - redis

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: okproje_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - okproje_network
    depends_on:
      - app

  # MySQL Database
  db:
    image: mysql:8.0
    container_name: okproje_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-okproje}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_USER: ${DB_USERNAME:-okproje}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}
    volumes:
      - ../mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3307:3306"
    networks:
      - okproje_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: okproje_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ../redis_data:/data
    networks:
      - okproje_network

  # Node.js for Frontend Assets
  node:
    image: node:18-alpine
    container_name: okproje_node
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: sh -c "npm install && npm run build && npm run dev"
    networks:
      - okproje_network
    depends_on:
      - app

  # LiveKit for Video/Audio
  livekit:
    image: livekit/livekit-server:latest
    container_name: okproje_livekit
    command: >
      --config /etc/livekit.yaml
    environment:
      LIVEKIT_KEYS: "${LIVEKIT_API_KEY:-devkey}:${LIVEKIT_API_SECRET:-devsecret}"
    volumes:
      - ./docker/livekit.yaml:/etc/livekit.yaml:ro
    ports:
      - "7880:7880"
      - "7881:7881"
    restart: unless-stopped
    networks:
      - okproje_network
    depends_on:
      - turn

  # TURN Server for WebRTC
  turn:
    image: coturn/coturn
    container_name: okproje_turn
    command: >
      -n --log-file=stdout
      --min-port=49160 --max-port=49200
      --realm=call.katibim.xyz
      --lt-cred-mech
      --user=${TURN_USERNAME:-turnuser}:${TURN_PASSWORD:-turnpass}
      --external-ip=call.katibim.xyz
      --listening-port=3478
      --tls-listening-port=5349
      --listening-ip=0.0.0.0
      --relay-ip=0.0.0.0
      --no-multicast-peers
      --no-cli
      --no-tlsv1
      --no-tlsv1_1
      --no-tlsv1_2
      --no-tlsv1_3
      --no-dtls
      --no-tls
      --verbose
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "49160-49200:49160-49200/udp"
    restart: unless-stopped
    networks:
      - okproje_network



# volumes:
  # Artık host dizinlerini kullandığımız için named volume'lara ihtiyaç yok
  # Tüm veriler ../ dizininde saklanacak

networks:
  okproje_network:
    driver: bridge